version: '3'
services:
  prod-frontend:
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    container_name: prod-frontend
    ports:
      - 5000:5000
    networks:
      - budget-app
    volumes:
      - /app/node_modules
      - ./frontend:/app
      - frontend-build:/usr/src/app/dist
    depends_on:
      - prod-backend
    environment:
      - VITE_BACKEND_BASE_URL=${BACKEND_BASE_URL}
  prod-nginx:
    image: nginx:1.20.1-alpine
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - frontend-build:/usr/share/nginx/html
    ports:
      - 8080:80
    container_name: budget-reverse-proxy
    networks:
      - budget-app
    depends_on:
      - prod-frontend
      - prod-backend
  prod-backend:
    build:
      context: ./backend
      dockerfile: prod.Dockerfile
    container_name: prod-backend
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
    ports:
      - 3000:3000
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
      - REDIS_HOST=${REDIS_HOST:-prod-redis}
      - MONGO_HOST=prod-mongodb
    networks:
      - budget-app
    depends_on:
      - prod-redis
      - prod-elasticsearch
      - prod-mongodb
    command: ['npm', 'start']
  prod-mongodb:
    image: mongo
    container_name: prod-mongodb
    restart: on-failure
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-root_dev}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-root_password_dev}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-database_dev}
      - MONGO_USERNAME=${MONGO_USERNAME:-user_dev}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-password_dev}
    volumes:
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ./mongo_data_prod:/data/db
    networks:
      - budget-app
  prod-redis:
    image: redis:6-alpine
    container_name: prod-redis
    networks:
      - budget-app
    ports:
      - 6379:6379
  prod-elasticsearch:
    container_name: prod-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - discovery.type=single-node
    logging:
      driver: none
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      - budget-app
networks:
  budget-app:
    driver: bridge
volumes:
  esdata:
  frontend:
  backend:
  frontend-build:
