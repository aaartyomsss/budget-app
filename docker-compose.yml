version: '3'
services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - 5000:5000
    networks:
      - budget-app
    volumes:
      - /app/node_modules
      - ./frontend:/app
    depends_on:
      - backend
  nginx:
    image: nginx:1.20.1-alpine
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: budget-reverse-proxy
    networks:
      - budget-app
    depends_on:
      - frontend
      - backend
  backend:
    build: ./backend
    container_name: backend
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/backend/node_modules
    ports:
      - 3000:3000
    environment:
      ELASTICSEARCH_HOST: 'elasticsearch:9200'
    networks:
      - budget-app
    depends_on:
      - redis
      - elasticsearch
      - mongodb
    command: ['npm', 'start']
  mongodb:
    image: mongo
    container_name: mongodb
    restart: on-failure
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-root_dev}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-root_password_dev}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-database_dev}
      - MONGO_USERNAME=${MONGO_USERNAME:-user_dev}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-password_dev}
    volumes:
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ./mongo_data:/data/db
    networks:
      - budget-app
  redis:
    image: redis:6-alpine
    container_name: redis
    networks:
      - budget-app
    ports:
      - 6379:6379
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - discovery.type=single-node
    logging:
      driver: none
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      - budget-app
networks:
  budget-app:
    driver: bridge
volumes:
  esdata:
  frontend:
  backend:
